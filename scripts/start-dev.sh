#!/bin/bash

# üöÄ Script para iniciar POS Argentina en modo desarrollo
# Versi√≥n simplificada que no requiere builds complejos

set -e
LOG_FILE="/tmp/pos-dev-$(date +'%Y%m%d-%H%M%S').log"

# Colores
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

log() {
    echo -e "${GREEN}[$(date +'%H:%M:%S')] $1${NC}" | tee -a $LOG_FILE
}

error() {
    echo -e "${RED}[ERROR] $1${NC}" | tee -a $LOG_FILE
}

warn() {
    echo -e "${YELLOW}[WARNING] $1${NC}" | tee -a $LOG_FILE
}

info() {
    echo -e "${BLUE}[INFO] $1${NC}" | tee -a $LOG_FILE
}

# Banner
echo -e "${BLUE}"
cat << "EOF"
  ____   ___  ____       _                         _   _             
 |  _ \ / _ \/ ___|     / \   _ __ __ _  ___ _ __ | |_(_)_ __   __ _ 
 | |_) | | | \___ \    / _ \ | '__/ _` |/ _ \ '_ \| __| | '_ \ / _` |
 |  __/| |_| |___) |  / ___ \| | | (_| |  __/ | | | |_| | | | | (_| |
 |_|    \___/|____/  /_/   \_\_|  \__, |\___|_| |_|\__|_|_| |_|\__,_|
                                  |___/                              
    ____             __  __           _      
   |  _ \  _____   _|  \/  | ___   __| | ___ 
   | | | |/ _ \ \ / / |\/| |/ _ \ / _` |/ _ \
   | |_| |  __/\ V /| |  | | (_) | (_| |  __/
   |____/ \___| \_/ |_|  |_|\___/ \__,_|\___|
                                             
EOF
echo -e "${NC}"

log "üöÄ Iniciando POS Argentina en modo desarrollo"
log "üìù Log guardado en: $LOG_FILE"

# Verificar que estamos en el directorio correcto
if [[ ! -f "docker-compose.dev.yml" ]]; then
    error "No se encontr√≥ docker-compose.dev.yml. Ejecutar desde el directorio del proyecto."
    exit 1
fi

# Obtener IP local
LOCAL_IP=$(hostname -I | awk '{print $1}' 2>/dev/null || echo "localhost")
info "üåê IP local detectada: $LOCAL_IP"

# Parar servicios previos si existen
log "üõë Parando servicios previos..."
docker compose -f docker-compose.dev.yml down --remove-orphans 2>/dev/null || true

# Limpiar contenedores hu√©rfanos
log "üßπ Limpiando contenedores hu√©rfanos..."
docker system prune -f --volumes 2>/dev/null || true

# Iniciar servicios base
log "üóÑÔ∏è  Iniciando PostgreSQL y Redis..."
docker compose -f docker-compose.dev.yml up -d postgres redis

# Esperar a que PostgreSQL est√© listo
log "‚è≥ Esperando a que PostgreSQL est√© listo..."
for i in {1..30}; do
    if docker compose -f docker-compose.dev.yml exec -T postgres pg_isready -U pos_user &>/dev/null; then
        log "‚úÖ PostgreSQL est√° listo"
        break
    fi
    if [ $i -eq 30 ]; then
        error "‚ùå PostgreSQL no pudo iniciarse en 30 segundos"
        exit 1
    fi
    sleep 1
done

# Iniciar API
log "üöÄ Iniciando API..."
docker compose -f docker-compose.dev.yml up -d pos-api

# Esperar a que la API est√© lista
log "‚è≥ Esperando a que la API est√© lista..."
for i in {1..20}; do
    if curl -s http://localhost:4000/api/v1/health &>/dev/null; then
        log "‚úÖ API est√° lista"
        break
    fi
    if [ $i -eq 20 ]; then
        warn "‚ö†Ô∏è  API tard√≥ m√°s de lo esperado, continuando..."
        break
    fi
    sleep 1
done

# Iniciar frontend
log "üñ•Ô∏è  Iniciando aplicaciones frontend..."
docker compose -f docker-compose.dev.yml up -d pos-terminal pos-admin

# Esperar un poco para que los frontends se inicien
log "‚è≥ Esperando a que los frontends est√©n listos..."
sleep 10

# Verificar servicios
log "üîç Verificando servicios..."
docker compose -f docker-compose.dev.yml ps

# Mostrar informaci√≥n final
log "‚úÖ Sistema iniciado exitosamente!"
echo ""
info "üåê URLs disponibles:"
echo "   ‚Ä¢ Terminal POS: http://localhost:3000"
echo "   ‚Ä¢ Admin Panel:  http://localhost:3001" 
echo "   ‚Ä¢ API:          http://localhost:4000"
echo ""
info "üåç URLs de red local:"
echo "   ‚Ä¢ Terminal POS: http://$LOCAL_IP:3000"
echo "   ‚Ä¢ Admin Panel:  http://$LOCAL_IP:3001"
echo "   ‚Ä¢ API:          http://$LOCAL_IP:4000"
echo ""
info "üìä Comandos √∫tiles:"
echo "   ‚Ä¢ Ver logs:     docker compose -f docker-compose.dev.yml logs -f"
echo "   ‚Ä¢ Ver estado:   docker compose -f docker-compose.dev.yml ps"
echo "   ‚Ä¢ Parar todo:   docker compose -f docker-compose.dev.yml down"
echo ""
log "üìù Log completo en: $LOG_FILE"